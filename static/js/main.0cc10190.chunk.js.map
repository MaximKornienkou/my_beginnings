{"version":3,"sources":["p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css"],"names":["module","exports","Message","props","message","styles","avatar","messageBody","name","messageText","time","appendix","className","src","alt","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","style","valid","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","event","currentTarget","v1","alert","HW3","setUsers","user","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCAhKD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,MAAQ,wBAAwB,WAAa,+B,mBCAvID,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,mBCAxFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,iJC4BTC,MAnBf,SAAiBC,GAAsB,IAC5BC,EAAmEC,IAAnED,QAASE,EAA0DD,IAA1DC,OAAQC,EAAkDF,IAAlDE,YAAaC,EAAqCH,IAArCG,KAAMC,EAA+BJ,IAA/BI,YAAaC,EAAkBL,IAAlBK,KAAMC,EAAYN,IAAZM,SAC9D,OACI,sBAAKC,UAAWR,EAAhB,UACI,qBAAKQ,UAAWN,EAAhB,SACI,qBAAKO,IAAKV,EAAMG,OAAQQ,IAAI,aAEhC,sBAAKF,UAAWL,EAAhB,UACI,gCACI,qBAAKK,UAAWJ,EAAhB,SAAuBL,EAAMK,OAC7B,qBAAKI,UAAWH,EAAhB,SAA8BN,EAAMC,aAExC,qBAAKQ,UAAWF,EAAhB,SAAuBP,EAAMO,OAC7B,sBAAME,UAAWD,EAAjB,sBCpBVI,EACM,qHADNA,EAEI,SAFJA,EAGO,aAHPA,EAII,QA0BKC,MAvBf,WACI,OACI,gCACI,uBADJ,cAMI,cAAC,EAAD,CACIV,OAAQS,EACRP,KAAMO,EACNX,QAASW,EACTL,KAAMK,IAGV,uBAGA,2B,OCPGE,MAZf,SAAgBd,GAGZ,OACI,gCACKA,EAAMe,OAAOV,KADlB,KAC0BL,EAAMe,OAAOC,SADvC,IAEI,wBAAQC,QALO,kBAAMjB,EAAMkB,qBAAqBlB,EAAMe,OAAOI,MAK7D,mBC4BGC,MAjCf,SAAiBpB,GACb,IAAMqB,EAAgBrB,EAAMsB,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEIT,OAAQS,EACRN,qBAAsBlB,EAAMkB,sBAFvBM,EAAEL,QAmBf,OACI,gCACKE,EACD,wBAAQJ,QAhBD,WACXjB,EAAMyB,UAAU,QAeZ,iBACA,wBAAQR,QAdA,WACZjB,EAAMyB,UAAU,SAaZ,kBACA,wBAAQR,QAZE,WACdjB,EAAMyB,UAAU,WAWZ,oBACA,wBAAQR,QAVD,WACXjB,EAAMyB,UAAU,QASZ,qBCxBNC,EAAoC,CACtC,CAACP,IAAK,EAAGd,KAAM,QAASW,SAAU,QAClC,CAACG,IAAK,EAAGd,KAAM,QAASW,SAAU,OAClC,CAACG,IAAK,EAAGd,KAAM,QAASW,SAAU,OAClC,CAACG,IAAK,EAAGd,KAAM,OAAQW,SAAU,QACjC,CAACG,IAAK,EAAGd,KAAM,aAAcW,SAAU,WA8D5BW,MA3Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIN,EAFJ,KAILO,EAnCmB,SAACH,EAA4BE,GACtD,OAAQA,GACJ,IAAK,OACD,OAAOF,EAAQE,QAAO,SAAAP,GAAC,MAAmB,SAAfA,EAAER,YAEjC,IAAK,SACD,OAAOa,EAAQE,QAAO,SAAAP,GAAC,MAAmB,WAAfA,EAAER,YAEjC,IAAK,MACD,OAAOa,EAAQE,QAAO,SAAAP,GAAC,MAAmB,QAAfA,EAAER,YAEjC,QACI,OAAOa,GAuBSI,CAAcJ,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIT,KAAMU,EACNP,UAAWA,EACXP,qBAXiB,SAACC,GAAD,OAAiBW,EATtB,SAACD,EAA4BV,GACrD,OAAOU,EAAQE,QAAO,SAAAP,GAAC,OAAIA,EAAEL,MAAQA,KAQoBe,CAAaL,EAASV,OAcvE,uBAGA,2B,yBCjDGgB,EAf+B,SAAC,GAEzC,IADD9B,EACA,EADAA,KAAM+B,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASC,EAChC,EADgCA,MAAOC,EACvC,EADuCA,WAElCC,EAAaF,EAAQG,IAAMH,MAAQG,IAAMC,MAE/C,OACI,gCACI,uBAAOC,MAAOtC,EAAMuC,SAAUR,EAAiB3B,UAAW+B,IAC1D,+BAAOF,IACP,wBAAQrB,QAASoB,EAAjB,iBACA,sBAAM5B,UAAWgC,IAAMF,WAAvB,SAAoCA,Q,QCkCjCM,EAzCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEnB,mBAAiB,IADiD,mBACnFvB,EADmF,KAC7E2C,EAD6E,OAEhEpB,mBAAiB,IAF+C,mBAEnFU,EAFmF,KAE5EW,EAF4E,KAsBpFV,EAAaO,EAAMI,OAEzB,OACI,qCACI,cAAC,EAAD,CACI7C,KAAMA,EACN+B,gBAxBY,SAACe,GACrBH,EAAQG,EAAMC,cAAcT,OACxBQ,EAAMC,cAAcT,MACpBM,EAAS,IAETA,EAAS,iBAoBLZ,QAjB0C,WAC7ChC,GAGD0C,EAAgB,CAAC5B,IAAKkC,eAAMhD,KAAMA,IAClCiD,MAAM,SAAD,OAAUjD,EAAV,MACL2C,EAAQ,IACRC,EAAS,KALTA,EAAS,iBAgBLX,MAAOA,EACPC,WAAYA,IAEhB,6BACKO,EAAMvB,KAAI,gBAAEJ,EAAF,EAAEA,IAAKd,EAAP,EAAOA,KAAP,OAAiB,6BAAeA,GAANc,YCftCoC,MAvBf,WAAgB,IAAD,EACe3B,mBAA0B,IADzC,mBACJkB,EADI,KACGU,EADH,KAOX,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBV,MAAOA,EAAOC,gBAVjB,SAACU,GACrBD,EAAS,GAAD,mBAAKV,GAAL,CAAYW,QAWhB,uBAGA,2B,iCC6BGC,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEf,EAOH,EAPGA,SAAUgB,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZxB,EAKH,EALGA,MACA7B,EAIH,EAJGA,UAAWsD,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMC,IAAE5B,MAAR,YAAiByB,GAAgC,IACnEI,EAAmB,UAAMD,IAAEE,MAAR,YAAiB9B,EAAQ4B,IAAEG,WAAaH,IAAEI,WAA1C,YAAwD7D,GAEjF,OACI,qCACI,mCACIkD,KAAM,OACNf,SArBa,SAAC2B,GACtB3B,GACGA,EAAS2B,GAEZX,GAAgBA,EAAaW,EAAEnB,cAAcT,QAkBrCkB,WAhBe,SAACU,GACxBV,GAAcA,EAAWU,GAEzBT,GACa,UAAVS,EAAEC,KACFV,KAYKrD,UAAW0D,GAEPH,IAEP1B,GAAS,sBAAM7B,UAAWwD,EAAjB,SAAsC3B,Q,kCC3B7CmC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKjE,EAGR,EAHQA,UACFuD,EAEN,mCACKW,EAAc,UAAMD,EAAMR,IAAEQ,IAAMR,IAAEU,QAAtB,YAAiCnE,GAErD,OACI,oCACIA,UAAWkE,GACPX,K,iBCuBDa,EAhCyC,SAAC,GASpD,EAPGlB,KAOF,IANEf,EAMH,EANGA,SAAUkC,EAMb,EANaA,gBACVrE,EAKH,EALGA,UACAsE,GAIH,EALchB,cAKd,EAJGgB,UAEGf,EAEN,4FAOKG,EAAmB,UAAMD,IAAEc,SAAR,YAAoBvE,GAAwB,IAErE,OACI,kCACI,mCACIkD,KAAM,WACNf,SAZa,SAAC2B,GACtB3B,GAAYA,EAAS2B,GACrBO,GAAmBA,EAAgBP,EAAEnB,cAAc6B,UAW3CxE,UAAW0D,GAEPH,IAEPe,GAAY,sBAAMtE,UAAWyD,IAAEH,cAAnB,SAAmCgB,QCwC7CG,MAzEf,WAAgB,IAAD,EACatD,mBAAiB,IAD9B,mBACJuD,EADI,KACEC,EADF,KAEL9C,EAAQ6C,EAAO,GAAK,QAEpBE,EAAY,WACV/C,EACAgB,MAAM,gFAENA,MAAM6B,IARH,EAYmBvD,oBAAkB,GAZrC,mBAYJqD,EAZI,KAYKK,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAK7E,UAAWyD,IAAEqB,OAAlB,UACI,cAAC,EAAD,CACI5C,MAAOwC,EACPvB,aAAcwB,EACdtB,QAASuB,EACT/C,MAAOA,EACPyB,cAAeG,IAAEsB,gBAGrB,cAAC,EAAD,CACI/E,UAAWyD,IAAEuB,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIf,KAAG,EACHzD,QAASoE,EAFb,qBAOA,cAAC,EAAD,CAAaK,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIT,QAASA,EACTH,gBAAiBQ,EAFrB,wBAQA,cAAC,EAAD,CAAeL,QAASA,EAASrC,SA/CxB,SAAC2B,GAAD,OAAsCe,EAAWf,EAAEnB,cAAc6B,eAkD9E,uBAKA,2BC/DGU,MATf,WACI,OACI,uD,OCyBOC,MArBf,WACI,OACI,8BAEI,cAAC,IAAD,+B,QCQGC,MAff,WACI,OACI,8BAEI,eAAC,IAAD,WAEA,cAAC,EAAD,IAEA,cAAC,EAAD,UCUGC,MAdf,WACI,OACI,sBAAKrF,UAAWyD,IAAE4B,IAAlB,UACI,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCLQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAzE,GACH0E,QAAQ1E,MAAMA,EAAMrC,a,kBEhJpCJ,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,6BAA6B,KAAO,sBAAsB,YAAc,6BAA6B,KAAO,sBAAsB,SAAW,6B","file":"static/js/main.0cc10190.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__17TWy\",\"superInput\":\"SuperInputText_superInput__1JMKk\",\"errorInput\":\"SuperInputText_errorInput__20McU\",\"error\":\"SuperInputText_error__3tHYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__dcGzf\",\"error\":\"Greeting_error__20oCX\",\"valid\":\"Greeting_valid__3Cd0k\",\"totalUsers\":\"Greeting_totalUsers__2-Pa1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3FYa9\",\"column\":\"HW4_column__1AecY\",\"testSpanError\":\"HW4_testSpanError__fznNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Ose9\",\"red\":\"SuperButton_red__2qbsn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__NMMRJ\",\"spanClassName\":\"SuperCheckbox_spanClassName__1rhbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3GICW\"};","import React from 'react'\nimport styles from './Message.module.css'\n\ntype MessageProps = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n}\n\nfunction Message(props: MessageProps) {\n    const {message, avatar, messageBody, name, messageText, time, appendix} = styles\n    return (\n        <div className={message}>\n            <div className={avatar}>\n                <img src={props.avatar} alt=\"Avatar\"/>\n            </div>\n            <div className={messageBody}>\n                <div>\n                    <div className={name}>{props.name}</div>\n                    <div className={messageText}>{props.message}</div>\n                </div>\n                <div className={time}>{props.time}</div>\n                <span className={appendix}> </span>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://avatars.mds.yandex.net/get-zen_doc/198334/pub_5acfd6c1a936f4899b1a2c88_5acfd7925816698601fc163f/scale_1200',\n    name: 'Kratos',\n    message: 'God of War',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType; // need to fix any\n    deleteAffairCallback: (_id: number) => void;// need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => props.deleteAffairCallback(props.affair._id)\n\n    return (\n        <div>\n            {props.affair.name} ({props.affair.priority})\n            <button onClick={deleteCallback}>X\n            </button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>;\n    setFilter: (filter: FilterType) => void;\n    deleteAffairCallback: (_id: number) => void;\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    }\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    }\n    const setLow = () => {\n        props.setFilter(\"low\")\n    }\n\n    return (\n        <div>\n            {mappedAffairs}\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport {v1} from \"uuid\";\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; // need to fix any\nexport type AffairType = {\n    _id: number;\n    name: string;\n    priority: string;\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    switch (filter) {\n        case \"high\": {\n            return affairs.filter(a => a.priority === \"high\");\n        }\n        case \"middle\": {\n            return affairs.filter(a => a.priority === \"middle\");\n        }\n        case \"low\": {\n            return affairs.filter(a => a.priority === \"low\");\n        }\n        default: {\n            return affairs;\n        }\n    }\n\n    // if (filter === 'high') {\n    //     return affairs.filter(a => a.priority === \"high\");\n    // } else if (filter === 'middle') {\n    //     return affairs.filter(a => a.priority === \"middle\");\n    // } else if (filter === 'low') {\n    //     return affairs.filter(a => a.priority === \"low\");\n    // } else {\n    //     return affairs;\n    // }\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))// need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, MouseEventHandler} from 'react'\nimport style from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string; // need to fix any\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void; // need to fix any\n    addUser: MouseEventHandler<HTMLButtonElement>; // need to fix any\n    error: string; // need to fix any\n    totalUsers: number; // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? style.error : style.valid // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span className={style.totalUsers}>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, MouseEventHandler, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\nimport {v1} from \"uuid\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>; // need to fix any\n    addUserCallback: (user: UserType) => void; // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => {// need to fix any\n        setName(event.currentTarget.value)\n        if (event.currentTarget.value) {\n            setError(\"\")\n        } else {\n            setError(\"Invalid name\")\n        }// need to fix\n    }\n    const addUser: MouseEventHandler<HTMLButtonElement> = () => {\n        if (!name) {\n            setError(\"Invalid name\")\n        } else {\n            addUserCallback({_id: v1(), name: name})\n            alert(`Hello ${name}!`);\n            setName(\"\")\n            setError(\"\")\n        }\n    }\n    const totalUsers = users.length // need to fix\n\n    return (\n        <>\n            <Greeting\n                name={name}\n                setNameCallback={setNameCallback}\n                addUser={addUser}\n                error={error}\n                totalUsers={totalUsers}\n            />\n            <ul>\n                {users.map(({_id, name}) => <li key={_id}>{name}</li>)}\n            </ul>\n\n        </>\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\n\n\n// types\nexport type UserType = {\n    _id: string;\n    name: string; // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (user: UserType) => { // need to fix any\n        setUsers([...users, user]); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void;\n    onEnter?: () => void;\n    error?: string;\n    spanClassName?: string;\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}// отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks!!!!\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport {HashRouter, Switch, Route, Redirect} from \"react-router-dom\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from '../../../p2-homeworks/h5/HW5'\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3iG1q\",\"avatar\":\"Message_avatar__34gBI\",\"messageBody\":\"Message_messageBody__1-uZ8\",\"name\":\"Message_name__MF8An\",\"messageText\":\"Message_messageText__38-na\",\"time\":\"Message_time__3npdo\",\"appendix\":\"Message_appendix__2tz8y\"};"],"sourceRoot":""}